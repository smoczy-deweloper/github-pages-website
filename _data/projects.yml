- name: ppo
  date: "Jul, 2025"
  link: https://github.com/gekas145/ppo
  media: 
    path: /assets/projects/car_racing.gif
    size: [72, 48]
  tools: "Python, pytorch, google cloud"
  description: >
    Implementation of Proximal Policy Optimization algorithm. Used to train deep CNNs to solve enviroments with continuous and discrete action spaces.

- name: handwriter
  date: "Oct, 2024"
  link: https://github.com/gekas145/handwriter
  media: 
    path: /assets/projects/handwriter.gif
    size: [100, 200]
  tools: "Python, tensorflow, google cloud"
  description: >
    Deep RNN that uses LSTM blocks and simple attention mechanism to generate human-like handwriting based on provided text transcriptions. Whole network code implemented in tensorflow, the training itself was carried out on GCP VM.  

- name: ctc-commands
  link: https://github.com/gekas145/ctc-commands
  date: "Oct, 2023"
  media: 
    path: /assets/projects/ctc_commands.png
    size: [600, 300]
  tools: "Python, pytorch"
  description: >
    Deep RNN trained to recognize short voice commands using Connectionist Temporal Classification(CTC) loss. Trained model is then tested with several decoding algorithms, implemented from scratch. Network and data processing were implemented in pytorch.

- name: wave-function-collapse
  link: https://github.com/gekas145/wave-function-collapse
  date: "Aug, 2023"
  media:
    path: /assets/projects/wfc.png
    size: [50, 25]
  tools: "Python"
  description: >
    An algorithm for image generation with no machine learning models involved.

- name: SOM
  link: https://github.com/gekas145/SOM
  date: "Apr, 2023"
  media:
    path: /assets/projects/som.png
    size: [72, 36]
  tools: "Python, numpy, scikit-learn"
  description: >
    Self-organizing map, aka SOM, aka Kohonen network implementation in Python. This algorithm is useful for visualising high-dimensional data in 2D.

- name: Snake
  link: https://github.com/gekas145/Snake
  date: "Dec, 2022"
  media: 
    path: /assets/projects/cnn_snake.gif
    size: [72, 54]
  tools: "Python, tensorflow"
  description: >
    Convolutional neural network is trained to play Snake game. The only information available to the network are images of game board, just as it is with humans. The network is trained by Deep Double Q-Network(DDQN) algorithm.

- name: NEAT
  date: "Jul, 2021"
  link: https://github.com/gekas145/NEAT
  media:
    path: /assets/projects/neat_dpb.gif
    size: [56, 42]
  tools: "Python, pymunk, numpy"
  description: >
    Neural Evolutions of Augmenting Topologies(NEAT) algorithm implementation from scratch which is tried out with xor, single and double poles balancing tasks.

- name: MNIST
  date: "Aug, 2020"
  link: https://github.com/gekas145/Neural-Network-MNIST
  tools: "Python, Java, numpy"
  media: 
    path: /assets/projects/mnist_draw_app.gif
    size: [72, 54]
  description: >
    Multi Layer Perseptron(MLP) and some optimizers(SGD, momentum) implemented in numpy from scratch. Trained to recognize handwritten digits from original MNIST dataset. Comes with simple drawing application to test on seld-drawn samples.
